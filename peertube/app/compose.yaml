# https://github.com/Chocobozzz/PeerTube/blob/master/support/docker/production/docker-compose.yml
---
name: peertube

networks:
  web:
    name: web
  db:
    name: db
  mail:
    name: mail

services:

  peertube:
    container_name: peertube
    build:
      context: .
    networks:
      - web
      - db
      - mail
    environment:
      - PEERTUBE_DB_USERNAME
      - PEERTUBE_DB_PASSWORD
      - PEERTUBE_DB_SSL
      - PEERTUBE_DB_HOSTNAME
      - PEERTUBE_WEBSERVER_HOSTNAME
      - PEERTUBE_TRUST_PROXY
      - PEERTUBE_SECRET
      - PEERTUBE_SMTP_HOSTNAME
      - PEERTUBE_SMTP_PORT
      - PEERTUBE_SMTP_FROM
      - PEERTUBE_SMTP_TLS
      - PEERTUBE_SMTP_DISABLE_STARTTLS
      - PEERTUBE_ADMIN_EMAIL
    volumes:
      - /var/lib/peertube/data:/data
      # - /var/lib/peertube/config:/config
      # - /var/lib/peertube/assets:/app/client/dist
    depends_on:
      - postgres
      - redis
      - postfix
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.routers.app.middlewares=redirect-https"
      - "traefik.http.routers.app-secure.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.app-secure.entrypoints=web-secure"
      - "traefik.http.routers.app-secure.service=app-secure"
      - "traefik.http.routers.app-secure.tls=true"
      - "traefik.http.routers.app-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.app-secure.loadbalancer.server.port=${APP_PORT}"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      - "traefik.docker.network=web"

  postgres:
    container_name: postgres
    image: postgres:13-alpine
    networks:
      - db
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: redis
    image: redis:6-alpine
    networks:
      - db
    volumes:
      - /var/lib/redis/data:/data
    restart: always

  postfix:
    container_name: postfix
    image: andreswebs/postfix-relay
    networks:
      - mail
    volumes:
      - /var/mail:/var/mail
      - /var/lib/postfix:/var/lib/postfix
      - /var/spool/postfix:/var/spool/postfix
    environment:
      - POSTFIX_myhostname
      - SMTP_HOST
      - SMTP_USERNAME
      - SMTP_PASSWORD
    restart: always

  # postfix:
  #   container_name: postfix
  #   image: mwader/postfix-relay
  #   networks:
  #     - mail
  #   volumes:
  #     - /var/mail:/var/mail
  #     - /var/lib/postfix:/var/lib/postfix
  #     - /var/spool/postfix:/var/spool/postfix
  #     - /etc/opendkim/keys:/etc/opendkim/keys
  #   environment:
  #     - POSTFIX_myhostname
  #     - OPENDKIM_DOMAINS
  #     - OPENDKIM_RequireSafeKeys
  #   restart: always

  traefik:
    container_name: traefik
    image: traefik:v2.9
    restart: always
    networks:
      - web
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --entrypoints.peertube-live.address=:1935
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 1935
        published: 1935
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/letsencrypt:/letsencrypt
